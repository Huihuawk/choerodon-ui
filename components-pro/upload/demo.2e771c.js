(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{1697:function(n,s,a){n.exports={appendUpload:a(2529),async:a(2530),basic:a(2531),beforeUpload:a(2532),"custom-handler":a(2533),data:a(2534),extra:a(2535),length:a(2536),remove:a(2537),"upload-method":a(2538)}},2529:function(n,s,a){n.exports={content:{"zh-CN":[["p","以追加形式上传文件列表"]],"en-US":[["p","Upload file list as append"]]},meta:{order:2,title:{"zh-CN":"追加上传文件列表","en-US":"Append Upload File List"},filename:"components-pro/upload/demo/appendUpload.md",id:"components-pro-upload-demo-appendUpload"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      withCredentials<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      partialUpload<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      appendUpload<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      withCredentials<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      partialUpload<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      appendUpload<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var u=function(a){function t(){return p(this,t),e(this,c(t).apply(this,arguments))}var u,i,k;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),u=t,(i=[{key:"render",value:function(){return n.createElement(s.Upload,{headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,withCredentials:!1,partialUpload:!0,appendUpload:!0})}}])&&o(u.prototype,i),k&&o(u,k),t}(n.Component);return n.createElement(u,null)}}},2530:function(n,s,a){n.exports={content:{"zh-CN":[["p","选择文件后，点击按钮上传。"]],"en-US":[["p","Click a button to upload after selecting files."]]},meta:{order:1,title:{"zh-CN":"点击按钮上传","en-US":"Click a button to upload"},filename:"components-pro/upload/demo/async.md",id:"components-pro-upload-demo-async"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));return n.createElement("div",null,n.createElement(s.Upload,{headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1}))}}},2531:function(n,s,a){n.exports={content:{"zh-CN":[["p","文件上传。"]],"en-US":[["p","File Upload."]]},meta:{order:0,title:{"zh-CN":"基本使用","en-US":"Basic Usage"},filename:"components-pro/upload/demo/basic.md",id:"components-pro-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  showUploadList<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  showUploadList<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));return n.createElement("div",null,n.createElement(s.Upload,{headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!0,showUploadList:!1}))}}},2532:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","beforeUpload"]," 返回 false 后，控制上传文件列表"]],"en-US":[["p","Use ",["code","beforeUpload"]," to return false to control the list of uploaded files"]]},meta:{order:3,title:{"zh-CN":"上传文件列表控制","en-US":"Upload File Control"},filename:"components-pro/upload/demo/beforeUpload.md",id:"components-pro-upload-demo-beforeUpload"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      uploadFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">\'xxx.jpg\'</span><span class="token punctuation">,</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'image/jpg\'</span><span class="token punctuation">,</span>\n          status<span class="token punctuation">:</span> <span class="token string">\'success\'</span><span class="token punctuation">,</span>\n          size<span class="token punctuation">:</span> <span class="token number">2800</span><span class="token punctuation">,</span>\n          uid<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          url<span class="token punctuation">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  handleBefore <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> isJPG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJPG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isJPG <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        uploadFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>uploadFileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      beforeUpload<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleBefore<span class="token punctuation">,</span>\n      withCredentials<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      partialUpload<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      uploadFileList<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>uploadFileList<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      uploadFileList<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          name<span class="token operator">:</span> <span class="token string">\'xxx.jpg\'</span><span class="token punctuation">,</span>\n          type<span class="token operator">:</span> <span class="token string">\'image/jpg\'</span><span class="token punctuation">,</span>\n          status<span class="token operator">:</span> <span class="token string">\'success\'</span><span class="token punctuation">,</span>\n          size<span class="token operator">:</span> <span class="token number">2800</span><span class="token punctuation">,</span>\n          uid<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          url<span class="token operator">:</span> <span class="token string">\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleBefore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> fileList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> isJPG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJPG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>isJPG <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        uploadFileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>uploadFileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      beforeUpload<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleBefore<span class="token punctuation">,</span>\n      withCredentials<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      partialUpload<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      uploadFileList<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>uploadFileList<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n){return function(n){if(Array.isArray(n)){for(var s=0,a=new Array(n.length);s<n.length;s++)a[s]=n[s];return a}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var u=function(a){function t(n){var a;return function(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}(this,t),(a=e(this,c(t).call(this,n))).handleBefore=function(n,t){var o="image/jpeg"===n.type;o||s.message.error("You can only upload JPG file!");var e=n.size/1024/1024<2;return e||s.message.error("Image must smaller than 2MB!"),o&&e&&a.setState({uploadFileList:[].concat(p(a.state.uploadFileList),[n])}),!1},a.state={uploadFileList:[{name:"xxx.jpg",type:"image/jpg",status:"success",size:2800,uid:1,url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]},a}var u,i,k;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),u=t,(i=[{key:"render",value:function(){var a={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,beforeUpload:this.handleBefore,withCredentials:!1,partialUpload:!1,uploadFileList:this.state.uploadFileList};return n.createElement(s.Upload,a)}}])&&o(u.prototype,i),k&&o(u,k),t}(n.Component);return n.createElement(u,null)}}},2533:function(n,s,a){n.exports={content:{"zh-CN":[["p","可以自定义上传请求得到响应后的处理方式，包括成功和失败。这将覆盖默认的处理行为。"]],"en-US":[["p","Customize the response handler, including success and failure. This will override the default handlers."]]},meta:{order:6,title:{"zh-CN":"自定义响应处理方法","en-US":"Customize The Response Handler"},filename:"components-pro/upload/demo/custom-handler.md",id:"components-pro-upload-demo-custom-handler"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  onUploadSuccess<span class="token punctuation">:</span> response <span class="token operator">=</span><span class="token operator">></span> message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  onUploadError<span class="token punctuation">:</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onUploadSuccess</span><span class="token operator">:</span> <span class="token parameter">response</span> <span class="token operator">=></span> message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onUploadError</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> file</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158)),t={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,onUploadSuccess:function(n){return s.message.success(n.message)},onUploadError:function(n,s,a){return console.log(n,s,a)}};return n.createElement("div",null,n.createElement(s.Upload,t))}}},2534:function(n,s,a){n.exports={content:{"zh-CN":[["p","为一个文件上传请求追加一个",["code","FormData"],"实例。请查看开发者工具中的 Network 标签。"]],"en-US":[["p","Append an extra ",["code","FormData"]," instance to a file upload request. Please checkout the 'Network' tab in the developer tool."]]},meta:{order:7,title:{"zh-CN":"附加额外数据","en-US":"Append Extra Data"},filename:"components-pro/upload/demo/data.md",id:"components-pro-upload-demo-data"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    key1<span class="token punctuation">:</span> <span class="token string">\'value1\'</span><span class="token punctuation">,</span>\n    key2<span class="token punctuation">:</span> <span class="token string">\'value2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  onUploadSuccess<span class="token punctuation">:</span> response <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  data<span class="token operator">:</span> <span class="token punctuation">{</span>\n    key1<span class="token operator">:</span> <span class="token string">\'value1\'</span><span class="token punctuation">,</span>\n    key2<span class="token operator">:</span> <span class="token string">\'value2\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onUploadSuccess</span><span class="token operator">:</span> <span class="token parameter">response</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158)),t={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,data:{key1:"value1",key2:"value2"},onUploadSuccess:function(n){return console.log(n)}};return n.createElement("div",null,n.createElement(s.Upload,t))}}},2535:function(n,s,a){n.exports={content:{"zh-CN":[["p","在组件右上角显示提示信息，如接受的文件类型等。"]],"en-US":[["p","Display hint on the top-right corner, such as acceptable types."]]},meta:{order:5,title:{"zh-CN":"附加提示信息","en-US":"Extra hint"},filename:"components-pro/upload/demo/extra.md",id:"components-pro-upload-demo-extra"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  extra<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token function">请上传图片文件</span><span class="token punctuation">(</span>jpg<span class="token punctuation">,</span> jpeg<span class="token punctuation">,</span> png<span class="token operator">...</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  onUploadSuccess<span class="token punctuation">:</span> response <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  extra<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token function">请上传图片文件</span><span class="token punctuation">(</span>jpg<span class="token punctuation">,</span> jpeg<span class="token punctuation">,</span> png<span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span>\n  <span class="token function-variable function">onUploadSuccess</span><span class="token operator">:</span> <span class="token parameter">response</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>div<span class="token operator">></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158)),t={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:["image/*"],uploadImmediately:!1,extra:n.createElement("p",null,"请上传图片文件(jpg, jpeg, png...)"),onUploadSuccess:function(n){return console.log(n)}};return n.createElement("div",null,n.createElement(s.Upload,t))}}},2536:function(n,s,a){n.exports={content:{"zh-CN":[["p","限制同时上传文件的数量。"]],"en-US":[["p","Constraint the amount of filed being uploaded at one time."]]},meta:{order:4,title:{"zh-CN":"数量限制","en-US":"Count Constraint"},filename:"components-pro/upload/demo/length.md",id:"components-pro-upload-demo-length"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> handleBefore <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> isJPG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJPG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> isJPG <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  fileListMaxLength<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  beforeUpload<span class="token punctuation">:</span> handleBefore<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleBefore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> fileList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> isJPG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'image/jpeg\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJPG<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'You can only upload JPG file!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">\'Image must smaller than 2MB!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> isJPG <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  fileListMaxLength<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  beforeUpload<span class="token operator">:</span> handleBefore<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158)),t={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,fileListMaxLength:2,beforeUpload:function(n,a){var t="image/jpeg"===n.type;t||s.message.error("You can only upload JPG file!");var p=n.size/1024/1024<2;return p||s.message.error("Image must smaller than 2MB!"),t&&p}};return n.createElement("div",null,n.createElement(s.Upload,t))}}},2537:function(n,s,a){n.exports={content:{"zh-CN":[["p","使用 ",["code","onRemoveFile"]," 返回 false 后，不移除"]],"en-US":[["p","Don't remove after returning false with ",["code","onRemoveFile"]]]},meta:{order:8,title:{"zh-CN":"文件删除回调","en-US":"File Delete Callback"},filename:"components-pro/upload/demo/remove.md",id:"components-pro-upload-demo-remove"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  handleRemove <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'remove\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      onRemoveFile<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleRemove<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">handleRemove</span> <span class="token operator">=</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'remove\'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n      headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n      multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      onRemoveFile<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleRemove<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var u=function(a){function t(){var n,s;p(this,t);for(var a=arguments.length,o=new Array(a),l=0;l<a;l++)o[l]=arguments[l];return(s=e(this,(n=c(t)).call.apply(n,[this].concat(o)))).handleRemove=function(n){return console.log("remove",n),!1},s}var u,i,k;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),u=t,(i=[{key:"render",value:function(){var a={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,onRemoveFile:this.handleRemove};return n.createElement(s.Upload,a)}}])&&o(u.prototype,i),k&&o(u,k),t}(n.Component);return n.createElement(u,null)}}},2538:function(n,s,a){n.exports={content:{"zh-CN":[["p","直接调用组件的上传方法，可以使用",["code","showUploadBtn={false}"],"使自带的上传按钮消失。"]],"en-US":[["p","Call ",["code","Upload"],"'s ",["code","startUpload"]," method directly. You can use ",["code","showUploadBtn={false}"]," to hide the original upload button."]]},meta:{order:9,title:{"zh-CN":"上传方法","en-US":"Upload method"},filename:"components-pro/upload/demo/upload-method.md",id:"components-pro-upload-demo-upload-method"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Output <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token punctuation">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token punctuation">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  showUploadBtn<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  showPreviewImage<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  upload<span class="token punctuation">;</span>\n\n  saveUpload <span class="token operator">=</span> node <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upload <span class="token operator">=</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  handleBtnClick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">startUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>文件管理<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Output</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>选择Logo<span class="token punctuation">"</span></span> <span class="token attr-name">renderer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Upload ref<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>saveUpload<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleBtnClick<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          提交\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Output <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">\'Access-Control-Allow-Origin\'</span><span class="token operator">:</span> <span class="token string">\'*\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  action<span class="token operator">:</span> <span class="token string">\'https://www.mocky.io/v2/5cc8019d300000980a055e76\'</span><span class="token punctuation">,</span>\n  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  accept<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.deb\'</span><span class="token punctuation">,</span> <span class="token string">\'.txt\'</span><span class="token punctuation">,</span> <span class="token string">\'.pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'image/*\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  uploadImmediately<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  showUploadBtn<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  showPreviewImage<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  upload<span class="token punctuation">;</span>\n\n  <span class="token function-variable function">saveUpload</span> <span class="token operator">=</span> <span class="token parameter">node</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>upload <span class="token operator">=</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleBtnClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>upload<span class="token punctuation">.</span><span class="token function">startUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>文件管理<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>Output label<span class="token operator">=</span><span class="token string">"选择Logo"</span> renderer<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>Upload ref<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>saveUpload<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>Button style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> color<span class="token operator">=</span><span class="token string">"primary"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleBtnClick<span class="token punctuation">}</span><span class="token operator">></span>\n          提交\n        <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(){return(p=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,s){return(u=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var i={headers:{"Access-Control-Allow-Origin":"*"},action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0,accept:[".deb",".txt",".pdf","image/*"],uploadImmediately:!1,showUploadBtn:!1,showPreviewImage:!0},k=function(a){function t(){var n,s;o(this,t);for(var a=arguments.length,p=new Array(a),e=0;e<a;e++)p[e]=arguments[e];return(s=c(this,(n=l(t)).call.apply(n,[this].concat(p)))).saveUpload=function(n){return s.upload=n},s.handleBtnClick=function(){s.upload.startUpload()},s}var k,r,d;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&u(n,s)}(t,a),k=t,(r=[{key:"render",value:function(){var a=this;return n.createElement(s.Form,{header:"文件管理"},n.createElement(s.Output,{label:"选择Logo",renderer:function(){return n.createElement(s.Upload,p({ref:a.saveUpload},i))}}),n.createElement(s.Button,{style:{marginBottom:10},color:"primary",onClick:this.handleBtnClick},"提交"))}}])&&e(k.prototype,r),d&&e(k,d),t}(n.Component);return n.createElement(k,null)}}}}]);