(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1755:function(n,a,s){"use strict";function t(n){return n.replace(/\s*\n\s*/g,"")}s.d(a,"a",(function(){return t}))},2276:function(n,a,s){n.exports={content:{"zh-CN":[["p","基本使用。"]],"en-US":[["p","Basic usage example."]]},meta:{order:0,title:{"zh-CN":"基本使用","en-US":"Basic usage"},filename:"components-pro/code-area/demo/basic.md",id:"components-pro-code-area-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> disabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> readOnly<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  handleDisabledChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Row</span> <span class="token attr-name">gutter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">readOnly</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ReadOnly<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>只读<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Col</span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Disabled<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDisabledChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>禁用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Row</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> readOnly<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> disabled<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> readOnly<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleDisabledChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> disabled<span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> readOnly<span class="token punctuation">,</span> disabled <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span></span> <span class="token attr-name">gutter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">readOnly</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ReadOnly<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>readOnly<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>只读<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Col</span></span> <span class="token attr-name">span</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Disabled<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDisabledChange<span class="token punctuation">}</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>disabled<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>禁用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Col</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Row</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(8),s(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function o(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,a){return!a||"object"!==t(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,a){return(u=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}var l={height:30},i=function(s){function t(){var n,a;p(this,t);for(var s=arguments.length,o=new Array(s),u=0;u<s;u++)o[u]=arguments[u];return(a=e(this,(n=c(t)).call.apply(n,[this].concat(o)))).state={readOnly:!0,disabled:!0},a.handleChange=function(n){a.setState({readOnly:n})},a.handleDisabledChange=function(n){a.setState({disabled:n})},a}var i,r,k;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&u(n,a)}(t,s),i=t,(r=[{key:"render",value:function(){var s=this.state,t=s.readOnly,p=s.disabled;return n.createElement(a.Row,{gutter:10},n.createElement(a.Col,{span:8},n.createElement(a.CodeArea,{style:l})),n.createElement(a.Col,{span:8},n.createElement(a.CodeArea,{readOnly:t,style:l,defaultValue:"ReadOnly"}),n.createElement(a.Switch,{onChange:this.handleChange,checked:t},"只读")),n.createElement(a.Col,{span:8},n.createElement(a.CodeArea,{disabled:p,style:l,defaultValue:"Disabled"}),n.createElement(a.Switch,{onChange:this.handleDisabledChange,checked:p},"禁用")))}}])&&o(i.prototype,r),k&&o(i,k),t}(n.Component);return n.createElement(i,null)}}},2277:function(n,a,s){n.exports={content:{"zh-CN":[["p","受控代码框。"]],"en-US":[["p","Controlled Code Area."]]},meta:{order:1,title:{"zh-CN":"受控代码框","en-US":"Controlled Code Area"},filename:"components-pro/code-area/demo/controlled.md",id:"components-pro-code-area-demo-controlled"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    value<span class="token punctuation">:</span> <span class="token string">\'Controlled Value\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    value<span class="token operator">:</span> <span class="token string">\'Controlled Value\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(8),s(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function o(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,a){return!a||"object"!==t(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,a){return(u=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}var l={height:30},i=function(s){function t(){var n,a;p(this,t);for(var s=arguments.length,o=new Array(s),u=0;u<s;u++)o[u]=arguments[u];return(a=e(this,(n=c(t)).call.apply(n,[this].concat(o)))).state={value:"Controlled Value"},a.handleChange=function(n){a.setState({value:n})},a}var i,r,k;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&u(n,a)}(t,s),i=t,(r=[{key:"render",value:function(){return n.createElement(a.CodeArea,{value:this.state.value,style:l,onChange:this.handleChange})}}])&&o(i.prototype,r),k&&o(i,k),t}(n.Component);return n.createElement(i,null)}}},2278:function(n,a,s){n.exports={content:{"zh-CN":[["p","数据绑定"]],"en-US":[["p","Dataset."]]},meta:{order:2,title:{"zh-CN":"数据绑定","en-US":"Dataset"},filename:"components-pro/code-area/demo/dataset.md",id:"components-pro-code-area-demo-dataset"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">550</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> readOnly<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span> <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">550</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> readOnly<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span> <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n  mountNode\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(8),s(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function o(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,a){return!a||"object"!==t(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,a){return(u=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}var l='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',i={height:550},r=function(s){function t(){var n,s;p(this,t);for(var o=arguments.length,u=new Array(o),i=0;i<o;i++)u[i]=arguments[i];return(s=e(this,(n=c(t)).call.apply(n,[this].concat(u)))).ds=new a.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:l,required:!0,readOnly:!0}]}),s}var r,k,d;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&u(n,a)}(t,s),r=t,(k=[{key:"render",value:function(){return n.createElement(a.CodeArea,{dataSet:this.ds,name:"content",style:i})}}])&&o(r.prototype,k),d&&o(r,d),t}(n.Component);return n.createElement(r,null)}}},2279:function(n,a,s){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:6,title:{"zh-CN":"HTML格式化","en-US":"HTML Format"},filename:"components-pro/code-area/demo/html-format.md",id:"components-pro-code-area-demo-html-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> HTMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/HTMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 html lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/html\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/htmlmixed/htmlmixed\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'htmlmixed\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;div class="demo-wrapper">\n    &lt;span id="demo">Demo&lt;/span>\n&lt;/div>\n&lt;script>\nvar demo = document.getElementById(\'demo\');\ndemo.style.cssText = \'color: red;\';\n&lt;/script>\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> htmlText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>htmlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>HTMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> HTMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/HTMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 html lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/html\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/htmlmixed/htmlmixed\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'htmlmixed\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="demo-wrapper">\n    &lt;span id="demo">Demo&lt;/span>\n&lt;/div>\n&lt;script>\nvar demo = document.getElementById(\'demo\');\ndemo.style.cssText = \'color: red;\';\n&lt;/script>\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> htmlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> htmlText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">HTML</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>htmlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,a=s(0),t=(s(8),s(158)),p=(n=s(2280))&&n.__esModule?n:{default:n};function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function e(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function c(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,a){return!a||"object"!==o(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function i(n,a){return(i=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}s(2282),"undefined"!=typeof window&&s(2315);var r={mode:"htmlmixed"},k="<div class=\"demo-wrapper\">\n    <span id=\"demo\">Demo</span>\n</div>\n<script>\nvar demo = document.getElementById('demo');\ndemo.style.cssText = 'color: red;';\n<\/script>\n",d={height:200},m=function(n){function s(){var n,a;e(this,s);for(var p=arguments.length,o=new Array(p),c=0;c<p;c++)o[c]=arguments[c];return(a=u(this,(n=l(s)).call.apply(n,[this].concat(o)))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),a}var o,m,g;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&i(n,a)}(s,n),o=s,(m=[{key:"render",value:function(){return a.createElement("div",null,a.createElement("h4",null,"HTML"),a.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(o.prototype,m),g&&c(o,g),s}(a.Component);return a.createElement(m,null)}}},2280:function(n,a,s){"use strict";s.r(a),s.d(a,"HTMLFormatter",(function(){return l}));var t=s(1741),p=s.n(t),o=s(2281),e=s.n(o),c=s(1755);function u(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,n)}var a,s,t;return a=n,(s=[{key:"getFormatted",value:function(a){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions;return p.a.format(a,s)}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(a.prototype,s),t&&u(a,t),n}();l.defaultOptions={parser:"html",plugins:[e.a]},a.default=new l},2282:function(n,a,s){"undefined"!=typeof window&&(s(1742),s(1743),s(2283))},2318:function(n,a,s){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:4,title:{"zh-CN":"Javascript格式化","en-US":"Javascript Format"},filename:"components-pro/code-area/demo/js-format.md",id:"components-pro-code-area-demo-js-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> JSFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 javascript lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/javascript\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Javascript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>jsStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>JSFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> JSFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 javascript lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/javascript\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'javascript\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Javascript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jsStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>JSFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,a=s(0),t=(s(8),s(158)),p=(n=s(2319))&&n.__esModule?n:{default:n};function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function e(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function c(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,a){return!a||"object"!==o(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function i(n,a){return(i=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}s(2320),"undefined"!=typeof window&&s(1762);var r={mode:"javascript"},k='function getOptions() {\n  var options = {\n    "compilerOptions": {\n      "strictNullChecks": true,\n      "moduleResolution": "node",\n      "allowSyntheticDefaultImports": true,\n      "experimentalDecorators": true,\n      "jsx": "preserve",\n      "noUnusedParameters": true,\n      "noUnusedLocals": true,\n      "declaration": true,\n      "target": "es6",\n      "lib": [\n        "dom",\n        "dom.iterable",\n        "es7",\n        "es2017.object"\n      ]\n    },\n    "exclude": [\n      "node_modules",\n      "lib",\n      "es"\n    ]\n  };\n\n  return options;\n}\n',d={height:500},m=function(n){function s(){var n,a;e(this,s);for(var p=arguments.length,o=new Array(p),c=0;c<p;c++)o[c]=arguments[c];return(a=u(this,(n=l(s)).call.apply(n,[this].concat(o)))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),a}var o,m,g;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&i(n,a)}(s,n),o=s,(m=[{key:"render",value:function(){return a.createElement("div",null,a.createElement("h4",null,"Javascript"),a.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(o.prototype,m),g&&c(o,g),s}(a.Component);return a.createElement(m,null)}}},2319:function(n,a,s){"use strict";s.r(a),s.d(a,"JSFormatter",(function(){return l}));var t=s(1741),p=s.n(t),o=s(1799),e=s.n(o),c=s(1755);function u(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,n)}var a,s,t;return a=n,(s=[{key:"getFormatted",value:function(a){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions;return p.a.format(a,s)}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(a.prototype,s),t&&u(a,t),n}();l.defaultOptions={parser:"babel",plugins:[e.a]},a.default=new l},2320:function(n,a,s){"use strict";s.r(a);var t=s(1795);if("undefined"!=typeof window){s(1742),s(1743);var p=s(659);p.registerHelper("lint","javascript",(function(n,a){a.indent||(a.indent=1),Object(t.JSHINT)(n,a,a.globals);var s=t.JSHINT.data().errors,o=[];return s&&function(n,a){for(var s=0;s<n.length;s++){var t=n[s];if(t){if(t.line<=0){window.console&&window.console.warn("Cannot display JSHint error (invalid line ".concat(t.line,")"),t);continue}var o=t.character-1,e=o+1;if(t.evidence){var c=t.evidence.substring(o).search(/.\b/);c>-1&&(e+=c)}var u={message:t.reason,severity:t.code&&t.code.startsWith("W")?"warning":"error",from:p.Pos(t.line-1,o),to:p.Pos(t.line-1,e)};a.push(u)}}}(s,o),o}))}},2321:function(n,a,s){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:5,title:{"zh-CN":"JSON格式化","en-US":"JSON Format"},filename:"components-pro/code-area/demo/json-format.md",id:"components-pro-code-area-demo-json-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器</span>\n<span class="token keyword">import</span> JSONFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSONFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 json lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/json\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span> json<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>JSON<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>jsonStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>JSONFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器</span>\n<span class="token keyword">import</span> JSONFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/JSONFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 json lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/json\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/javascript/javascript\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'javascript\'</span><span class="token punctuation">,</span> json<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">JSON</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>jsonStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>JSONFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,a=s(0),t=(s(8),s(158)),p=(n=s(2322))&&n.__esModule?n:{default:n};function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function e(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function c(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,a){return!a||"object"!==o(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function i(n,a){return(i=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}s(2323),"undefined"!=typeof window&&s(1762);var r={mode:{name:"javascript",json:!0}},k='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"\n    ]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',d={height:500},m=function(n){function s(){var n,a;e(this,s);for(var p=arguments.length,o=new Array(p),c=0;c<p;c++)o[c]=arguments[c];return(a=u(this,(n=l(s)).call.apply(n,[this].concat(o)))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),a}var o,m,g;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&i(n,a)}(s,n),o=s,(m=[{key:"render",value:function(){return a.createElement("div",null,a.createElement("h4",null,"JSON"),a.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(o.prototype,m),g&&c(o,g),s}(a.Component);return a.createElement(m,null)}}},2322:function(n,a,s){"use strict";s.r(a),s.d(a,"JSONFormatter",(function(){return l}));var t=s(1741),p=s.n(t),o=s(1799),e=s.n(o),c=s(1755);function u(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var l=function(){function n(){!function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,n)}var a,s,t;return a=n,(s=[{key:"getFormatted",value:function(a){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions;return p.a.format(a,s)}},{key:"getRaw",value:function(n){return Object(c.a)(n)}}])&&u(a.prototype,s),t&&u(a,t),n}();l.defaultOptions={parser:"json",plugins:[e.a]},a.default=new l},2323:function(n,a,s){"use strict";s.r(a);var t=s(2324),p=s.n(t);if("undefined"!=typeof window){s(1742),s(1743);var o=s(659);o.registerHelper("lint","json",(function(n){var a=[],s=p.a.parser||p.a;s.parseError=function(n,s){var t=s.loc;a.push({from:o.Pos(t.first_line-1,t.first_column),to:o.Pos(t.last_line-1,t.last_column),message:n})};try{s.parse(n)}catch(n){}return a}))}},2325:function(n,a,s){n.exports={content:{"zh-CN":[["p","使用不同主题。"]],"en-US":[["p","Using different themes."]]},meta:{order:3,title:{"zh-CN":"主题","en-US":"Theme"},filename:"components-pro/code-area/demo/theme.md",id:"components-pro-code-area-demo-theme"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 这两个主题不是组件内置的主题，需要手动引入</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/material.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/idea.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">525</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    theme<span class="token punctuation">:</span> <span class="token string">\'idea\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> jsonText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  handleThemeChange <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> theme<span class="token punctuation">:</span> value <span class="token operator">?</span> <span class="token string">\'material\'</span> <span class="token punctuation">:</span> <span class="token string">\'idea\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> theme<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>theme <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>material<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 这两个主题不是组件内置的主题，需要手动引入</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/material.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'codemirror/theme/idea.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> jsonText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">525</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    theme<span class="token operator">:</span> <span class="token string">\'idea\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> jsonText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleThemeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> theme<span class="token operator">:</span> value <span class="token operator">?</span> <span class="token string">\'material\'</span> <span class="token operator">:</span> <span class="token string">\'idea\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> theme<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>theme <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleThemeChange<span class="token punctuation">}</span></span> <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>material<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0),a=(s(8),s(158));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function o(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function e(n,a){return!a||"object"!==t(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function c(n){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function u(n,a){return(u=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}s(2326),s(2327);var l='{\n  "compilerOptions": {\n    "strictNullChecks": true,\n    "moduleResolution": "node",\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true,\n    "jsx": "preserve",\n    "noUnusedParameters": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "target": "es6",\n    "lib": [\n      "dom",\n      "dom.iterable",\n      "es7",\n      "es2017.object"]\n  },\n  "exclude": [\n    "node_modules",\n    "lib",\n    "es"\n  ]\n}\n',i={height:525},r=function(s){function t(){var n,s;p(this,t);for(var o=arguments.length,u=new Array(o),i=0;i<o;i++)u[i]=arguments[i];return(s=e(this,(n=c(t)).call.apply(n,[this].concat(u)))).state={theme:"idea"},s.ds=new a.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:l,required:!0}]}),s.handleThemeChange=function(n){s.setState({theme:n?"material":"idea"})},s}var r,k,d;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&u(n,a)}(t,s),r=t,(k=[{key:"render",value:function(){return n.createElement("div",null,n.createElement(a.CodeArea,{dataSet:this.ds,name:"content",options:{theme:this.state.theme},style:i}),n.createElement(a.Switch,{onChange:this.handleThemeChange,unCheckedChildren:"idea"},"material"))}}])&&o(r.prototype,k),d&&o(r,d),t}(n.Component);return n.createElement(r,null)}}},2328:function(n,a,s){n.exports={content:{"zh-CN":[["p","使用快捷键格式化代码，要传入一个 formatter 对象。默认的格式化快捷键是",["code","Alt + F"],"，去格式化快捷键是",["code","Alt + R"],"，可以通过属性手动配置。"]],"en-US":[["p","Use hotkey to format code."]]},meta:{order:7,title:{"zh-CN":"YAML格式化","en-US":"YAML Format"},filename:"components-pro/code-area/demo/yaml-format.md",id:"components-pro-code-area-demo-yaml-format"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入格式化器，注意使用模块的默认导出</span>\n<span class="token keyword">import</span> YAMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/YAMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 引入 yaml lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/yaml\'</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/yaml/yaml\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">\'yaml\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlText <span class="token operator">=</span> <span class="token template-string"><span class="token string">`YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token punctuation">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">:</span> yamlText<span class="token punctuation">,</span> required<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>YAML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeArea</span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>yamlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>YAMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> CodeArea<span class="token punctuation">,</span> DataSet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入格式化器，注意使用模块的默认导出</span>\n<span class="token keyword">import</span> YAMLFormatter <span class="token keyword">from</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/formatters/YAMLFormatter\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 引入 yaml lint</span>\n<span class="token keyword">import</span> <span class="token string">\'choerodon-ui/pro/lib/code-area/lint/yaml\'</span><span class="token punctuation">;</span>\n<span class="token comment">// 处理 codemirror 的SSR问题， 如无需SSR，请用import代替require;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 提供对应语言的语法高亮</span>\n  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'codemirror/mode/yaml/yaml\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> mode<span class="token operator">:</span> <span class="token string">\'yaml\'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> yamlStyle <span class="token operator">=</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSet</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    autoCreate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'content\'</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">\'string\'</span><span class="token punctuation">,</span> defaultValue<span class="token operator">:</span> yamlText<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token constant">YAML</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CodeArea</span></span>\n          <span class="token attr-name">dataSet</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>ds<span class="token punctuation">}</span></span>\n          <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>yamlStyle<span class="token punctuation">}</span></span>\n          <span class="token attr-name">formatter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>YAMLFormatter<span class="token punctuation">}</span></span>\n          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n,a=s(0),t=(s(8),s(158)),p=(n=s(2329))&&n.__esModule?n:{default:n};function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function e(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function c(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function u(n,a){return!a||"object"!==o(a)&&"function"!=typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}function l(n){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function i(n,a){return(i=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}s(2331),"undefined"!=typeof window&&s(2354);var r={mode:"yaml"},k="YAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n",d={height:200},m=function(n){function s(){var n,a;e(this,s);for(var p=arguments.length,o=new Array(p),c=0;c<p;c++)o[c]=arguments[c];return(a=u(this,(n=l(s)).call.apply(n,[this].concat(o)))).ds=new t.DataSet({autoCreate:!0,fields:[{name:"content",type:"string",defaultValue:k,required:!0}]}),a}var o,m,g;return function(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&i(n,a)}(s,n),o=s,(m=[{key:"render",value:function(){return a.createElement("div",null,a.createElement("h4",null,"YAML"),a.createElement(t.CodeArea,{dataSet:this.ds,name:"content",style:d,formatter:p.default,options:r}))}}])&&c(o.prototype,m),g&&c(o,g),s}(a.Component);return a.createElement(m,null)}}},2329:function(n,a,s){"use strict";s.r(a),s.d(a,"YAMLFormatter",(function(){return u}));var t=s(1741),p=s.n(t),o=s(2330),e=s.n(o);function c(n,a){for(var s=0;s<a.length;s++){var t=a[s];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}var u=function(){function n(){!function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,n)}var a,s,t;return a=n,(s=[{key:"getFormatted",value:function(a){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.defaultOptions;return p.a.format(a,s)}},{key:"getRaw",value:function(n){return n}}])&&c(a.prototype,s),t&&c(a,t),n}();u.defaultOptions={parser:"yaml",plugins:[e.a]},a.default=new u},2331:function(n,a,s){"use strict";s.r(a);var t=s(2332),p=s.n(t);if("undefined"!=typeof window){s(1742),s(1743);var o=s(659);o.registerHelper("lint","yaml",(function(n){var a=[];try{p.a.loadAll(n)}catch(n){var s=n.mark,t=n.message,e=s?o.Pos(s.line,s.column):o.Pos(0,0),c=e;a.push({from:e,to:c,message:t})}return a}))}}}]);