(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{1538:function(n,s,a){n.exports={base:a(2082)}},2082:function(n,s,a){n.exports={content:{"zh-CN":[["p","基本使用。"]],"en-US":[["p","Basic Usage"]]},meta:{order:0,title:{"zh-CN":"基本使用","en-US":"Basic Usage"},filename:"components/responsive/demo/base.md",id:"components-responsive-demo-base"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Responsive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  handleChange <span class="token operator">=</span> items <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'responsive change\'</span><span class="token punctuation">,</span> items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  renderResponsive <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>size<span class="token punctuation">,</span> color<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">,</span> backgroundColor<span class="token punctuation">:</span> color <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> xs<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> sm<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span> md<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> lg<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">,</span> xl<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> xxl<span class="token punctuation">:</span> <span class="token number">350</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// size</span>\n      <span class="token punctuation">{</span> xs<span class="token punctuation">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span> sm<span class="token punctuation">:</span> <span class="token string">\'green\'</span><span class="token punctuation">,</span> md<span class="token punctuation">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span> lg<span class="token punctuation">:</span> <span class="token string">\'black\'</span><span class="token punctuation">,</span> xl<span class="token punctuation">:</span> <span class="token string">\'yellow\'</span><span class="token punctuation">,</span> xxl<span class="token punctuation">:</span> <span class="token string">\'pink\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// color</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Responsive</span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderResponsive<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Responsive</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Responsive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'choerodon-ui\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">items</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'responsive change\'</span><span class="token punctuation">,</span> items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">renderResponsive</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>size<span class="token punctuation">,</span> color<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> size<span class="token punctuation">,</span> height<span class="token operator">:</span> size<span class="token punctuation">,</span> backgroundColor<span class="token operator">:</span> color <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> sm<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> md<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> lg<span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span> xl<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> xxl<span class="token operator">:</span> <span class="token number">350</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// size</span>\n      <span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token string">\'red\'</span><span class="token punctuation">,</span> sm<span class="token operator">:</span> <span class="token string">\'green\'</span><span class="token punctuation">,</span> md<span class="token operator">:</span> <span class="token string">\'blue\'</span><span class="token punctuation">,</span> lg<span class="token operator">:</span> <span class="token string">\'black\'</span><span class="token punctuation">,</span> xl<span class="token operator">:</span> <span class="token string">\'yellow\'</span><span class="token punctuation">,</span> xxl<span class="token operator">:</span> <span class="token string">\'pink\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// color</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Responsive</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>items<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderResponsive<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Responsive</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(8),a(23));function t(n){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,s){return function(n){if(Array.isArray(n))return n}(n)||function(n,s){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,p=!1,o=void 0;try{for(var e,c=n[Symbol.iterator]();!(t=(e=c.next()).done)&&(a.push(e.value),!s||a.length!==s);t=!0);}catch(n){p=!0,o=n}finally{try{t||null==c.return||c.return()}finally{if(p)throw o}}return a}(n,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function o(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function e(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function c(n,s){return!s||"object"!==t(s)&&"function"!=typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}function u(n){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function l(n,s){return(l=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}var i=function(a){function t(){var s,a;o(this,t);for(var e=arguments.length,l=new Array(e),i=0;i<e;i++)l[i]=arguments[i];return(a=c(this,(s=u(t)).call.apply(s,[this].concat(l)))).handleChange=function(n){console.log("responsive change",n)},a.renderResponsive=function(s){var a=p(s,2),t=a[0],o=a[1];return n.createElement("div",{style:{width:t,height:t,backgroundColor:o}})},a}var i,k,r;return function(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&l(n,s)}(t,a),i=t,(k=[{key:"render",value:function(){return n.createElement(s.Responsive,{items:[{xs:100,sm:150,md:200,lg:250,xl:300,xxl:350},{xs:"red",sm:"green",md:"blue",lg:"black",xl:"yellow",xxl:"pink"}],onChange:this.handleChange},this.renderResponsive)}}])&&e(i.prototype,k),r&&e(i,r),t}(n.Component);return n.createElement(i,null)}}}}]);